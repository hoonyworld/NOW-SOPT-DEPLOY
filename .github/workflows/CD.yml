name: CI

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-22.04 

    steps: 
    - name: checkout
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'corretto'
        java-version: '17'

    - name: create application.yml
      run: |
        cd ./src/main/resources
        echo "${{ secrets.CI_APPLICATION }}" > ./application.yml
        cat ./application.yml
      shell: bash
      
    - name: build
      run: |
        chmod +x gradlew
        ./gradlew build -x test
      shell: bash

# CD 워크플로우
name: CD

on:
  push:
    branches: [ main ]

env:
  S3_BUCKET_NAME: nowsopt-sopkathon-bucket

jobs:
  deploy:
    name: Code deployment
    runs-on: ubuntu-22.04

    steps:
    - name: checkout
      uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'corretto'
    
    - name: make application.yml
      run: |
        cd ./src/main/resources
        echo "spring.datasource.driver-class-name=org.postgresql.Driver" > ./application-set1.yml
        echo "spring.datasource.url=${{ secrets.DB_URL }}" >> ./application-set1.yml
        echo "spring.datasource.username=${{ secrets.DB_USERNAME }}" >> ./application-set1.yml
        echo "spring.datasource.password=${{ secrets.DB_PASSWORD }}" >> ./application-set1.yml
        echo "spring.jpa.show-sql=true" >> ./application-set1.yml
        echo "spring.jpa.hibernate.ddl-auto=update" >> ./application-set1.yml
        echo "spring.jpa.properties.hibernate.format_sql=true" >> ./application-set1.yml
        echo "spring.jpa.properties.hibernate.show_sql=true" >> ./application-set1.yml
        echo "server.port=8081" >> ./application-set1.yml
        cat ./application-set1.yml
      shell: bash
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle
      run: ./gradlew build -x test
      
    - name: Make Directory
      run: mkdir -p deploy
      
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy
    
    - name: Copy appspec.yml
      run: cp appspec.yml ./deploy

    - name: Copy script
      run: cp ./scripts/*.sh ./deploy
      
    - name: Make zip file
      run: zip -r ./now-sopt.zip ./deploy
      shell: bash
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ap-northeast-2
        
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./now-sopt.zip s3://$S3_BUCKET_NAME/
      
    - name: Deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      run: |
        aws deploy create-deployment \
        --application-name now-sopt-deploy \
        --deployment-group-name now-sopt-deploy \
        --file-exists-behavior OVERWRITE \
        --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=now-sopt.zip \
        --region ap-northeast-2
